version: '3.9'
services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "8080:80"
    networks:
      - app-network
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
    ports:
      - "3000:3000"
    environment:
      - DATABASE_HOST=database
      - DATABASE_USER=${DB_USER}
      - DATABASE_PASS=${DB_PASS}
    networks:
      - app-network
    depends_on:
      - database
      - rabbitmq

  database:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - app-network

  logstash:
    image: docker.elastic.co/logstash/logstash:7.10.0  # Use the 7.10.0 version of Logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0  # Specify version
    ports:
      - "9200:9200"
    environment:
      - "xpack.security.enabled=false"
      - "xpack.security.http.ssl.enabled=false"
      - "discovery.type=single-node"
      - "network.host=0.0.0.0"  # Bind to all interfaces
    volumes:
      - es-data:/usr/share/elasticsearch/data
    networks:
      - app-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.7.0  # Updated Kibana version to match Elasticsearch
    ports:
      - "5601:5601"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
  es-data:
